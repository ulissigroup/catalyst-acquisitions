Matplotlib created a temporary config/cache directory at /tmp/matplotlib-2le6j37w because the default path (/home/jovyan/.config/matplotlib) is not a writable directory; it is highly recommended to set the MPLCONFIGDIR environment variable to a writable directory, in particular to speed up the import of Matplotlib and to better support multiprocessing.
Matplotlib is building the font cache; this may take a moment.
Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s]Optimization Progress:   2%|‚ñè         | 2/96 [06:32<5:07:21, 196.19s/pipeline]Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [06:50<2:26:40, 137.51s/pipeline]Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [13:16<3:42:33, 211.97s/pipeline]
Generation 1 - Current best internal CV score: -0.17920377999619636Optimization Progress:  73%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé  | 70/96 [13:20<1:04:18, 148.41s/pipeline]Optimization Progress:  74%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç  | 71/96 [13:33<44:53, 107.73s/pipeline]  Optimization Progress:  75%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 72/96 [15:49<46:32, 116.36s/pipeline]
Generation 2 - Current best internal CV score: -0.16768054810288172                                                                             /global/cfs/cdirs/m2755/GASpy_workspaces/GASpy_kt/GASpy_regressions/gaspy_regress/fingerprinters.py:140: RuntimeWarning: You did not initialize the fingerprinter with the Hf element, and so we will be guessing its median binding energy as the median of all median energies.
  RuntimeWarning)
/global/cfs/cdirs/m2755/GASpy_workspaces/GASpy_kt/GASpy_regressions/gaspy_regress/fingerprinters.py:140: RuntimeWarning: You did not initialize the fingerprinter with the Cs element, and so we will be guessing its median binding energy as the median of all median energies.
  RuntimeWarning)
/global/cfs/cdirs/m2755/GASpy_workspaces/GASpy_kt/GASpy_regressions/gaspy_regress/fingerprinters.py:140: RuntimeWarning: You did not initialize the fingerprinter with the Tc element, and so we will be guessing its median binding energy as the median of all median energies.
  RuntimeWarning)
/global/cfs/cdirs/m2755/GASpy_workspaces/GASpy_kt/GASpy_regressions/gaspy_regress/fingerprinters.py:140: RuntimeWarning: You did not initialize the fingerprinter with the Cl element, and so we will be guessing its median binding energy as the median of all median energies.
  RuntimeWarning)
/global/cfs/cdirs/m2755/GASpy_workspaces/GASpy_kt/GASpy_regressions/gaspy_regress/fingerprinters.py:140: RuntimeWarning: You did not initialize the fingerprinter with the Hg element, and so we will be guessing its median binding energy as the median of all median energies.
  RuntimeWarning)
/global/cfs/cdirs/m2755/GASpy_workspaces/GASpy_kt/GASpy_regressions/gaspy_regress/fingerprinters.py:140: RuntimeWarning: You did not initialize the fingerprinter with the Ta element, and so we will be guessing its median binding energy as the median of all median energies.
  RuntimeWarning)
/global/cfs/cdirs/m2755/GASpy_workspaces/GASpy_kt/GASpy_regressions/gaspy_regress/fingerprinters.py:140: RuntimeWarning: You did not initialize the fingerprinter with the C element, and so we will be guessing its median binding energy as the median of all median energies.
  RuntimeWarning)
Hallucinating discovery...:   0%|          | 0/91 [00:00<?, ?it/s]
Best pipeline: RandomForestRegressor(RandomForestRegressor(ElasticNetCV(input_matrix, l1_ratio=0.55, tol=1e-05), bootstrap=False, max_features=0.5, min_samples_leaf=5, min_samples_split=20, n_estimators=100), bootstrap=False, max_features=0.8, min_samples_leaf=10, min_samples_split=20, n_estimators=100)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:03<00:07,  8.13pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [07:12<2:14:59, 128.57s/pipeline][A
Generation 1 - Current best internal CV score: -0.1621554139003718
Optimization Progress:  67%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã   | 64/96 [07:15<48:01, 90.04s/pipeline]   [A
Optimization Progress:  68%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä   | 65/96 [07:42<36:36, 70.85s/pipeline][A
Optimization Progress:  69%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ   | 66/96 [14:32<1:26:22, 172.76s/pipeline][A
Generation 2 - Current best internal CV score: -0.15964949303387752
                                                                               [AHallucinating discovery...:   1%|          | 1/91 [26:25<39:38:03, 1585.37s/it]
Best pipeline: KNeighborsRegressor(KNeighborsRegressor(ExtraTreesRegressor(input_matrix, bootstrap=True, max_features=0.05, min_samples_leaf=15, min_samples_split=10, n_estimators=100), n_neighbors=14, p=2, weights=distance), n_neighbors=16, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:01<00:02, 23.20pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [10:53<3:25:32, 195.75s/pipeline][A
Generation 1 - Current best internal CV score: -0.13757380071688652
Optimization Progress:  75%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 72/96 [11:03<54:50, 137.10s/pipeline]  [A
Optimization Progress:  76%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 73/96 [11:15<38:08, 99.51s/pipeline] [A
Optimization Progress:  78%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä  | 75/96 [16:50<41:58, 119.92s/pipeline][A
Generation 2 - Current best internal CV score: -0.13757380071688652
                                                                             [AHallucinating discovery...:   2%|‚ñè         | 2/91 [54:34<39:57:49, 1616.51s/it]
Best pipeline: RandomForestRegressor(RandomForestRegressor(ElasticNetCV(input_matrix, l1_ratio=0.55, tol=1e-05), bootstrap=False, max_features=0.5, min_samples_leaf=5, min_samples_split=2, n_estimators=100), bootstrap=False, max_features=0.8, min_samples_leaf=10, min_samples_split=20, n_estimators=100)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:17<00:35,  1.82pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  35%|‚ñà‚ñà‚ñà‚ñå      | 34/96 [08:12<1:14:01, 71.64s/pipeline][A
Generation 1 - Current best internal CV score: -0.1359906868604622
Optimization Progress:  69%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ   | 66/96 [08:22<25:07, 50.24s/pipeline]  [A
Optimization Progress:  70%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ   | 67/96 [13:59<1:05:56, 136.44s/pipeline][A
Generation 2 - Current best internal CV score: -0.1359906868604622
                                                                               [AHallucinating discovery...:   3%|‚ñé         | 3/91 [1:18:42<38:16:48, 1566.00s/it]
Best pipeline: KNeighborsRegressor(SGDRegressor(ZeroCount(ExtraTreesRegressor(FastICA(input_matrix, tol=0.1), bootstrap=True, max_features=0.05, min_samples_leaf=20, min_samples_split=10, n_estimators=100)), alpha=0.0, eta0=0.1, fit_intercept=True, l1_ratio=0.5, learning_rate=invscaling, loss=epsilon_insensitive, penalty=elasticnet, power_t=0.1), n_neighbors=5, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:26<00:53,  1.19pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  35%|‚ñà‚ñà‚ñà‚ñå      | 34/96 [10:10<1:31:08, 88.21s/pipeline][A
Generation 1 - Current best internal CV score: -0.12646793962147423
Optimization Progress:  73%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé  | 70/96 [10:11<26:45, 61.75s/pipeline]  [A
Optimization Progress:  73%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé  | 70/96 [10:25<26:45, 61.75s/pipeline][A
Optimization Progress:  74%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç  | 71/96 [10:27<20:01, 48.07s/pipeline][A
Optimization Progress:  75%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 72/96 [16:39<58:04, 145.17s/pipeline][A
Generation 2 - Current best internal CV score: -0.12646793962147423
                                                                             [AHallucinating discovery...:   4%|‚ñç         | 4/91 [1:46:04<38:23:52, 1588.87s/it]
Best pipeline: KNeighborsRegressor(GradientBoostingRegressor(MinMaxScaler(input_matrix), alpha=0.95, learning_rate=0.1, loss=huber, max_depth=4, max_features=0.6000000000000001, min_samples_leaf=12, min_samples_split=11, n_estimators=100, subsample=0.35000000000000003), n_neighbors=5, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:11<00:22,  2.81pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [09:56<3:04:35, 175.80s/pipeline][A
Generation 1 - Current best internal CV score: -0.12646793962147423
Optimization Progress:  74%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç  | 71/96 [09:57<51:16, 123.07s/pipeline]  [A
Optimization Progress:  74%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç  | 71/96 [10:12<51:16, 123.07s/pipeline][A
Optimization Progress:  75%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 72/96 [17:35<1:29:23, 223.49s/pipeline][A
Generation 2 - Current best internal CV score: -0.12646793962147423
                                                                               [AHallucinating discovery...:   5%|‚ñå         | 5/91 [2:15:29<39:13:02, 1641.66s/it]
Best pipeline: KNeighborsRegressor(GradientBoostingRegressor(MinMaxScaler(input_matrix), alpha=0.95, learning_rate=0.1, loss=huber, max_depth=4, max_features=0.6000000000000001, min_samples_leaf=12, min_samples_split=11, n_estimators=100, subsample=0.35000000000000003), n_neighbors=5, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:00<00:01, 48.80pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [00:15<00:01, 48.80pipeline/s][A
Optimization Progress:  35%|‚ñà‚ñà‚ñà‚ñå      | 34/96 [10:00<1:32:54, 89.92s/pipeline][A
Generation 1 - Current best internal CV score: -0.12646793962147423
Optimization Progress:  75%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 72/96 [10:03<25:11, 62.97s/pipeline]  [A
Optimization Progress:  76%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 73/96 [10:17<18:35, 48.51s/pipeline][A
Optimization Progress:  77%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã  | 74/96 [16:19<52:14, 142.46s/pipeline][A
Generation 2 - Current best internal CV score: -0.12246050345007944
                                                                             [AHallucinating discovery...:   7%|‚ñã         | 6/91 [2:44:39<39:31:48, 1674.22s/it]
Best pipeline: KNeighborsRegressor(LassoLarsCV(FastICA(input_matrix, tol=0.8500000000000001), normalize=True), n_neighbors=5, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:05<00:11,  5.64pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [09:06<2:50:30, 162.39s/pipeline][A
Generation 1 - Current best internal CV score: -0.12246050345007944
Optimization Progress:  69%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ   | 66/96 [09:07<56:50, 113.67s/pipeline]  [A
Optimization Progress:  69%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ   | 66/96 [09:23<56:50, 113.67s/pipeline][A
Optimization Progress:  70%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ   | 67/96 [15:51<1:37:05, 200.87s/pipeline][A
Generation 2 - Current best internal CV score: -0.12246050345007944
                                                                               [AHallucinating discovery...:   8%|‚ñä         | 7/91 [3:10:43<38:17:36, 1641.15s/it]
Best pipeline: KNeighborsRegressor(LassoLarsCV(FastICA(input_matrix, tol=0.8500000000000001), normalize=True), n_neighbors=5, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:07<00:14,  4.56pipeline/s][A
Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [00:17<03:19,  3.17s/pipeline][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  35%|‚ñà‚ñà‚ñà‚ñå      | 34/96 [10:20<3:09:23, 183.29s/pipeline][A
Generation 1 - Current best internal CV score: -0.11798555952064534
Optimization Progress:  74%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç  | 71/96 [10:21<53:27, 128.31s/pipeline]  [A
Optimization Progress:  75%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 72/96 [10:37<51:19, 128.31s/pipeline][A
Optimization Progress:  76%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 73/96 [15:54<53:36, 139.83s/pipeline][A
Generation 2 - Current best internal CV score: -0.11798555952064534
                                                                             [AHallucinating discovery...:   9%|‚ñâ         | 8/91 [3:39:47<38:32:49, 1671.93s/it]
Best pipeline: KNeighborsRegressor(ZeroCount(LassoLarsCV(FastICA(input_matrix, tol=0.8500000000000001), normalize=True)), n_neighbors=5, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:02<00:04, 14.34pipeline/s][A
Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [00:16<04:37,  4.41s/pipeline][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  36%|‚ñà‚ñà‚ñà‚ñã      | 35/96 [08:47<1:20:58, 79.65s/pipeline][A
Generation 1 - Current best internal CV score: -0.11798555952064534
Optimization Progress:  71%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   | 68/96 [08:57<26:03, 55.85s/pipeline]  [A
Optimization Progress:  72%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè  | 69/96 [14:50<1:05:14, 144.98s/pipeline][A
Generation 2 - Current best internal CV score: -0.1170667913149998
                                                                               [AHallucinating discovery...:  10%|‚ñâ         | 9/91 [4:05:58<37:23:20, 1641.47s/it]
Best pipeline: KNeighborsRegressor(RidgeCV(LassoLarsCV(FastICA(input_matrix, tol=0.8500000000000001), normalize=True)), n_neighbors=5, p=1, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:08<00:17,  3.64pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [06:15<1:55:37, 110.12s/pipeline][A
Generation 1 - Current best internal CV score: -0.10955704494690262
Optimization Progress:  67%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã   | 64/96 [06:22<41:08, 77.15s/pipeline]   [A
Optimization Progress:  68%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä   | 65/96 [06:30<29:15, 56.64s/pipeline][A
Optimization Progress:  69%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ   | 66/96 [11:51<1:07:55, 135.86s/pipeline][A
Generation 2 - Current best internal CV score: -0.10955704494690262
                                                                               [AHallucinating discovery...:  11%|‚ñà         | 10/91 [4:28:30<34:59:03, 1554.86s/it]
Best pipeline: KNeighborsRegressor(RidgeCV(FastICA(input_matrix, tol=0.8500000000000001)), n_neighbors=5, p=1, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:13<00:26,  2.40pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [08:54<2:44:20, 156.51s/pipeline][A
Generation 1 - Current best internal CV score: -0.10955704494690262
Optimization Progress:  69%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ   | 66/96 [09:00<54:48, 109.62s/pipeline]  [A
Optimization Progress:  70%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ   | 67/96 [15:39<1:34:53, 196.32s/pipeline][A
Optimization Progress:  71%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   | 68/96 [15:39<1:04:09, 137.47s/pipeline][A
Generation 2 - Current best internal CV score: -0.10955704494690262
                                                                               [AHallucinating discovery...:  12%|‚ñà‚ñè        | 11/91 [4:54:59<34:46:51, 1565.14s/it]
Best pipeline: KNeighborsRegressor(RidgeCV(FastICA(input_matrix, tol=0.8500000000000001)), n_neighbors=5, p=1, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:10<00:21,  2.93pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  35%|‚ñà‚ñà‚ñà‚ñå      | 34/96 [09:13<1:24:21, 81.64s/pipeline][A
Generation 1 - Current best internal CV score: -0.10955704494690262
Optimization Progress:  70%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ   | 67/96 [09:29<27:41, 57.29s/pipeline]  [A
Optimization Progress:  73%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé  | 70/96 [16:31<35:37, 82.23s/pipeline][A
Generation 2 - Current best internal CV score: -0.10955704494690262
                                                                            [AHallucinating discovery...:  13%|‚ñà‚ñé        | 12/91 [5:21:36<34:33:02, 1574.46s/it]
Best pipeline: KNeighborsRegressor(RidgeCV(FastICA(input_matrix, tol=0.8500000000000001)), n_neighbors=5, p=1, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:00<00:01, 52.35pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:17<00:01, 52.35pipeline/s][A
Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [00:20<06:15,  5.95s/pipeline][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  35%|‚ñà‚ñà‚ñà‚ñå      | 34/96 [10:43<3:17:23, 191.03s/pipeline][A
Generation 1 - Current best internal CV score: -0.10955704494690262
Optimization Progress:  77%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã  | 74/96 [11:03<49:05, 133.87s/pipeline]  [A
Optimization Progress:  79%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ  | 76/96 [18:34<53:47, 161.37s/pipeline][A
Generation 2 - Current best internal CV score: -0.10955704494690262
                                                                             [AHallucinating discovery...:  14%|‚ñà‚ñç        | 13/91 [5:50:24<35:06:57, 1620.74s/it]
Best pipeline: KNeighborsRegressor(RidgeCV(FastICA(input_matrix, tol=0.8500000000000001)), n_neighbors=5, p=1, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:08<00:16,  3.90pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [09:08<2:50:18, 162.19s/pipeline][A
Generation 1 - Current best internal CV score: -0.10955704494690262
Optimization Progress:  71%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   | 68/96 [09:19<53:01, 113.63s/pipeline]  [A
Optimization Progress:  73%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé  | 70/96 [15:24<58:12, 134.33s/pipeline][A
Generation 2 - Current best internal CV score: -0.10955704494690262
                                                                             [AHallucinating discovery...:  15%|‚ñà‚ñå        | 14/91 [6:16:52<34:27:01, 1610.67s/it]
Best pipeline: KNeighborsRegressor(RidgeCV(FastICA(input_matrix, tol=0.8500000000000001)), n_neighbors=5, p=1, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:03<00:07,  8.66pipeline/s][A
Optimization Progress:  35%|‚ñà‚ñà‚ñà‚ñå      | 34/96 [00:14<01:49,  1.76s/pipeline][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  36%|‚ñà‚ñà‚ñà‚ñã      | 35/96 [08:34<2:33:37, 151.10s/pipeline][A
Generation 1 - Current best internal CV score: -0.10955704494690262
Optimization Progress:  67%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã   | 64/96 [08:41<56:27, 105.85s/pipeline]  [A
Optimization Progress:  69%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ   | 66/96 [08:46<37:22, 74.74s/pipeline] [A
Optimization Progress:  70%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ   | 67/96 [13:43<1:08:26, 141.62s/pipeline][A
Generation 2 - Current best internal CV score: -0.10955704494690262
                                                                               [AHallucinating discovery...:  16%|‚ñà‚ñã        | 15/91 [6:40:23<32:44:27, 1550.89s/it]
Best pipeline: KNeighborsRegressor(RidgeCV(FastICA(input_matrix, tol=0.8500000000000001)), n_neighbors=5, p=1, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:22<00:45,  1.40pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [09:13<2:47:33, 159.58s/pipeline][A
Generation 1 - Current best internal CV score: -0.10955704494690262
Optimization Progress:  69%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ   | 66/96 [09:22<55:53, 111.79s/pipeline]  [A
Optimization Progress:  72%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè  | 69/96 [09:27<35:27, 78.78s/pipeline] [A
Optimization Progress:  73%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé  | 70/96 [14:59<1:07:02, 154.73s/pipeline][A
Generation 2 - Current best internal CV score: -0.10955704494690262
                                                                               [AHallucinating discovery...:  18%|‚ñà‚ñä        | 16/91 [7:05:47<32:08:39, 1542.92s/it]
Best pipeline: KNeighborsRegressor(RidgeCV(FastICA(input_matrix, tol=0.8500000000000001)), n_neighbors=5, p=1, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:17<00:35,  1.79pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [11:49<3:38:20, 207.94s/pipeline][A
Generation 1 - Current best internal CV score: -0.10497407592214687
Optimization Progress:  76%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 73/96 [11:59<55:49, 145.63s/pipeline]  [A
Optimization Progress:  78%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä  | 75/96 [18:22<55:47, 159.39s/pipeline][A
Generation 2 - Current best internal CV score: -0.10460183706860973
                                                                             [AHallucinating discovery...:  19%|‚ñà‚ñä        | 17/91 [7:35:31<33:11:50, 1615.01s/it]
Best pipeline: KNeighborsRegressor(KNeighborsRegressor(SelectPercentile(SelectPercentile(input_matrix, percentile=69), percentile=74), n_neighbors=1, p=1, weights=distance), n_neighbors=5, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:05<00:10,  6.30pipeline/s][A
Optimization Progress:  36%|‚ñà‚ñà‚ñà‚ñã      | 35/96 [00:09<00:32,  1.87pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  38%|‚ñà‚ñà‚ñà‚ñä      | 36/96 [09:15<2:44:22, 164.38s/pipeline][A
Generation 1 - Current best internal CV score: -0.10460183706860973
Optimization Progress:  69%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ   | 66/96 [09:23<57:34, 115.14s/pipeline]  [A
Optimization Progress:  70%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ   | 67/96 [09:27<39:32, 81.80s/pipeline] [A
Optimization Progress:  71%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   | 68/96 [17:44<1:36:24, 206.59s/pipeline][A
Generation 2 - Current best internal CV score: -0.10460183706860973
                                                                               [AHallucinating discovery...:  20%|‚ñà‚ñâ        | 18/91 [8:04:50<33:37:28, 1658.20s/it]
Best pipeline: KNeighborsRegressor(KNeighborsRegressor(SelectPercentile(SelectPercentile(input_matrix, percentile=69), percentile=74), n_neighbors=1, p=1, weights=distance), n_neighbors=5, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:06<00:13,  4.58pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [09:59<3:06:52, 177.97s/pipeline][A
Generation 1 - Current best internal CV score: -0.10223204379589128
Optimization Progress:  72%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè  | 69/96 [10:06<56:05, 124.64s/pipeline]  [A
Optimization Progress:  73%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé  | 70/96 [16:06<1:24:33, 195.13s/pipeline][A
Generation 2 - Current best internal CV score: -0.10223204379589128
                                                                               [AHallucinating discovery...:  21%|‚ñà‚ñà        | 19/91 [8:33:34<33:33:42, 1678.09s/it]
Best pipeline: KNeighborsRegressor(ExtraTreesRegressor(KNeighborsRegressor(SelectPercentile(SelectPercentile(GradientBoostingRegressor(input_matrix, alpha=0.85, learning_rate=0.5, loss=lad, max_depth=1, max_features=0.5, min_samples_leaf=11, min_samples_split=12, n_estimators=100, subsample=0.5), percentile=69), percentile=74), n_neighbors=1, p=2, weights=distance), bootstrap=True, max_features=0.1, min_samples_leaf=11, min_samples_split=20, n_estimators=100), n_neighbors=5, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:03<00:06, 10.00pipeline/s][A
Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [00:22<06:03,  5.78s/pipeline][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  35%|‚ñà‚ñà‚ñà‚ñå      | 34/96 [11:04<3:23:18, 196.75s/pipeline][A
Generation 1 - Current best internal CV score: -0.10223204379589128
Optimization Progress:  70%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ   | 67/96 [11:16<1:06:37, 137.83s/pipeline][A
Optimization Progress:  71%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   | 68/96 [18:30<1:45:46, 226.66s/pipeline][A
Generation 2 - Current best internal CV score: -0.10223204379589128
                                                                               [AHallucinating discovery...:  22%|‚ñà‚ñà‚ñè       | 20/91 [9:03:30<33:47:34, 1713.44s/it]
Best pipeline: KNeighborsRegressor(ExtraTreesRegressor(KNeighborsRegressor(SelectPercentile(SelectPercentile(GradientBoostingRegressor(input_matrix, alpha=0.85, learning_rate=0.5, loss=lad, max_depth=1, max_features=0.5, min_samples_leaf=11, min_samples_split=12, n_estimators=100, subsample=0.5), percentile=69), percentile=74), n_neighbors=1, p=2, weights=distance), bootstrap=True, max_features=0.1, min_samples_leaf=11, min_samples_split=20, n_estimators=100), n_neighbors=5, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:00<00:01, 42.40pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:11<00:01, 42.40pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [11:37<3:39:38, 209.18s/pipeline][A
Generation 1 - Current best internal CV score: -0.10223204379589128
Optimization Progress:  73%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé  | 70/96 [11:45<1:03:28, 146.48s/pipeline][A
Optimization Progress:  75%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 72/96 [11:51<41:22, 103.42s/pipeline]  [A
Optimization Progress:  76%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 73/96 [21:14<1:32:33, 241.44s/pipeline][A
Generation 2 - Current best internal CV score: -0.10223204379589128
                                                                               [AHallucinating discovery...:  23%|‚ñà‚ñà‚ñé       | 21/91 [9:49:54<39:33:44, 2034.63s/it]
Best pipeline: KNeighborsRegressor(ExtraTreesRegressor(KNeighborsRegressor(SelectPercentile(SelectPercentile(GradientBoostingRegressor(input_matrix, alpha=0.85, learning_rate=0.5, loss=lad, max_depth=1, max_features=0.5, min_samples_leaf=11, min_samples_split=12, n_estimators=100, subsample=0.5), percentile=69), percentile=74), n_neighbors=1, p=2, weights=distance), bootstrap=True, max_features=0.1, min_samples_leaf=11, min_samples_split=20, n_estimators=100), n_neighbors=5, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:00<00:00, 303.56pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:13<00:00, 303.56pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [10:38<3:21:13, 191.65s/pipeline][A
Generation 1 - Current best internal CV score: -0.10084866767097367
Optimization Progress:  72%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè  | 69/96 [10:45<1:00:23, 134.21s/pipeline][A
Optimization Progress:  73%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé  | 70/96 [10:57<42:12, 97.42s/pipeline]   [A
Optimization Progress:  74%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç  | 71/96 [18:26<1:24:31, 202.85s/pipeline][A
Generation 2 - Current best internal CV score: -0.10027774839554504
                                                                               [AHallucinating discovery...:  24%|‚ñà‚ñà‚ñç       | 22/91 [10:20:26<37:50:03, 1973.96s/it]
Best pipeline: KNeighborsRegressor(PCA(KNeighborsRegressor(SelectPercentile(ElasticNetCV(SelectPercentile(Normalizer(RidgeCV(input_matrix), norm=l2), percentile=69), l1_ratio=0.25, tol=0.001), percentile=74), n_neighbors=1, p=1, weights=distance), iterated_power=6, svd_solver=randomized), n_neighbors=5, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:11<00:23,  2.73pipeline/s][A
Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [00:14<01:03,  1.01s/pipeline][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  35%|‚ñà‚ñà‚ñà‚ñå      | 34/96 [14:34<4:27:17, 258.67s/pipeline][A
Generation 1 - Current best internal CV score: -0.10027774839554504
Optimization Progress:  74%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç  | 71/96 [14:40<1:15:27, 181.12s/pipeline][A
Optimization Progress:  75%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 72/96 [14:53<52:13, 130.57s/pipeline]  [A
Optimization Progress:  76%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 73/96 [24:56<1:44:26, 272.48s/pipeline][A
Generation 2 - Current best internal CV score: -0.10027774839554504
                                                                               [AHallucinating discovery...:  25%|‚ñà‚ñà‚ñå       | 23/91 [10:57:12<38:35:47, 2043.35s/it]
Best pipeline: KNeighborsRegressor(PCA(KNeighborsRegressor(SelectPercentile(ElasticNetCV(SelectPercentile(Normalizer(RidgeCV(input_matrix), norm=l2), percentile=69), l1_ratio=0.25, tol=0.001), percentile=74), n_neighbors=1, p=1, weights=distance), iterated_power=6, svd_solver=randomized), n_neighbors=5, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:14<00:29,  2.17pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  35%|‚ñà‚ñà‚ñà‚ñå      | 34/96 [11:14<1:42:32, 99.24s/pipeline][A
Generation 1 - Current best internal CV score: -0.09915934674448626
Optimization Progress:  73%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé  | 70/96 [11:21<30:07, 69.53s/pipeline]  [A
Optimization Progress:  74%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç  | 71/96 [20:15<1:27:02, 208.89s/pipeline][A
Generation 2 - Current best internal CV score: -0.09915934674448626
                                                                               [AHallucinating discovery...:  26%|‚ñà‚ñà‚ñã       | 24/91 [11:31:01<37:57:02, 2039.14s/it]
Best pipeline: KNeighborsRegressor(KNeighborsRegressor(SelectPercentile(XGBRegressor(SelectPercentile(Normalizer(ExtraTreesRegressor(RidgeCV(input_matrix), bootstrap=False, max_features=0.5, min_samples_leaf=11, min_samples_split=19, n_estimators=100), norm=l2), percentile=69), learning_rate=0.01, max_depth=7, min_child_weight=18, n_estimators=100, nthread=1, objective=reg:squarederror, subsample=0.8500000000000001), percentile=74), n_neighbors=1, p=1, weights=distance), n_neighbors=5, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:10<00:21,  3.03pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [10:12<3:09:48, 180.78s/pipeline][A
Generation 1 - Current best internal CV score: -0.09881951236204593
Optimization Progress:  75%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 72/96 [10:15<50:37, 126.56s/pipeline]  [A
Optimization Progress:  76%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 73/96 [10:28<35:32, 92.72s/pipeline] [A
Optimization Progress:  77%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã  | 74/96 [17:36<1:10:50, 193.21s/pipeline][A
Generation 2 - Current best internal CV score: -0.09783772838855549
                                                                               [AHallucinating discovery...:  27%|‚ñà‚ñà‚ñã       | 25/91 [12:01:01<36:04:10, 1967.44s/it]
Best pipeline: KNeighborsRegressor(KNeighborsRegressor(SelectPercentile(XGBRegressor(SelectPercentile(Normalizer(ExtraTreesRegressor(RidgeCV(input_matrix), bootstrap=False, max_features=0.5, min_samples_leaf=11, min_samples_split=19, n_estimators=100), norm=l2), percentile=69), learning_rate=0.01, max_depth=7, min_child_weight=18, n_estimators=100, nthread=1, objective=reg:squarederror, subsample=0.8500000000000001), percentile=74), n_neighbors=1, p=2, weights=distance), n_neighbors=5, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:08<00:16,  3.79pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [10:46<3:21:15, 191.68s/pipeline][A
Generation 1 - Current best internal CV score: -0.09606847156617379
Optimization Progress:  75%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 72/96 [10:51<53:41, 134.21s/pipeline]  [A
Optimization Progress:  76%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 73/96 [10:53<36:15, 94.60s/pipeline] [A
Optimization Progress:  77%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã  | 74/96 [19:49<1:23:18, 227.20s/pipeline][A
Generation 2 - Current best internal CV score: -0.09552968785608477
                                                                               [AHallucinating discovery...:  29%|‚ñà‚ñà‚ñä       | 26/91 [12:32:34<35:07:07, 1945.04s/it]
Best pipeline: KNeighborsRegressor(PCA(KNeighborsRegressor(SelectPercentile(Normalizer(RidgeCV(input_matrix), norm=l2), percentile=69), n_neighbors=17, p=1, weights=distance), iterated_power=10, svd_solver=randomized), n_neighbors=5, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:09<00:19,  3.28pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [18:03<5:38:34, 322.44s/pipeline][A
Generation 1 - Current best internal CV score: -0.09552968785608477
Optimization Progress:  79%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ  | 76/96 [18:04<1:15:14, 225.71s/pipeline][A
Optimization Progress:  79%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ  | 76/96 [18:19<1:15:14, 225.71s/pipeline][A
Optimization Progress:  80%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  | 77/96 [30:18<1:59:46, 378.26s/pipeline][A
Generation 2 - Current best internal CV score: -0.09552968785608477
                                                                               [AHallucinating discovery...:  30%|‚ñà‚ñà‚ñâ       | 27/91 [13:24:20<40:46:18, 2293.41s/it]
Best pipeline: KNeighborsRegressor(PCA(KNeighborsRegressor(SelectPercentile(Normalizer(RidgeCV(input_matrix), norm=l2), percentile=69), n_neighbors=17, p=1, weights=distance), iterated_power=10, svd_solver=randomized), n_neighbors=5, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:10<00:21,  3.03pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [13:57<4:20:36, 248.20s/pipeline][A
Generation 1 - Current best internal CV score: -0.09440265420408195
Optimization Progress:  77%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã  | 74/96 [14:03<1:03:43, 173.79s/pipeline][A
Optimization Progress:  78%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä  | 75/96 [21:58<1:32:27, 264.15s/pipeline][A
Generation 2 - Current best internal CV score: -0.09435999973775593
                                                                               [AHallucinating discovery...:  31%|‚ñà‚ñà‚ñà       | 28/91 [13:58:13<38:45:57, 2215.20s/it]
Best pipeline: KNeighborsRegressor(PCA(KNeighborsRegressor(ElasticNetCV(SelectPercentile(Normalizer(RidgeCV(input_matrix), norm=l2), percentile=69), l1_ratio=0.25, tol=0.001), n_neighbors=1, p=2, weights=distance), iterated_power=7, svd_solver=randomized), n_neighbors=5, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:06<00:13,  4.78pipeline/s][A
Optimization Progress:  36%|‚ñà‚ñà‚ñà‚ñã      | 35/96 [00:08<00:17,  3.46pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  38%|‚ñà‚ñà‚ñà‚ñä      | 36/96 [10:28<3:06:25, 186.43s/pipeline][A
Generation 1 - Current best internal CV score: -0.09356116555813729
Optimization Progress:  72%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè  | 69/96 [10:38<58:45, 130.59s/pipeline]  [A
Optimization Progress:  73%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé  | 70/96 [22:49<2:14:40, 310.77s/pipeline][A
Generation 2 - Current best internal CV score: -0.09356116555813729
                                                                               [AHallucinating discovery...:  32%|‚ñà‚ñà‚ñà‚ñè      | 29/91 [14:34:21<37:54:27, 2201.09s/it]
Best pipeline: KNeighborsRegressor(PCA(KNeighborsRegressor(ElasticNetCV(SelectPercentile(Normalizer(input_matrix, norm=l1), percentile=69), l1_ratio=0.7000000000000001, tol=0.001), n_neighbors=1, p=1, weights=distance), iterated_power=10, svd_solver=randomized), n_neighbors=5, p=1, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:01<00:02, 29.06pipeline/s][A
Optimization Progress:  35%|‚ñà‚ñà‚ñà‚ñå      | 34/96 [00:12<01:45,  1.71s/pipeline][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  36%|‚ñà‚ñà‚ñà‚ñã      | 35/96 [12:27<3:45:20, 221.64s/pipeline][A
Generation 1 - Current best internal CV score: -0.09302614494930266
Optimization Progress:  74%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç  | 71/96 [12:37<1:04:40, 155.24s/pipeline][A
Optimization Progress:  75%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 72/96 [19:49<1:35:17, 238.23s/pipeline][A
Generation 2 - Current best internal CV score: -0.09213685720536605
                                                                               [AHallucinating discovery...:  33%|‚ñà‚ñà‚ñà‚ñé      | 30/91 [15:05:41<35:39:45, 2104.68s/it]
Best pipeline: KNeighborsRegressor(KNeighborsRegressor(ElasticNetCV(Normalizer(RidgeCV(input_matrix), norm=l2), l1_ratio=0.25, tol=0.1), n_neighbors=3, p=2, weights=distance), n_neighbors=5, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:02<00:04, 14.91pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [13:47<4:19:55, 247.55s/pipeline][A
Generation 1 - Current best internal CV score: -0.09194747850075592
Optimization Progress:  75%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 72/96 [13:48<1:09:19, 173.30s/pipeline][A
Optimization Progress:  76%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 73/96 [24:25<1:59:42, 312.29s/pipeline][A
Generation 2 - Current best internal CV score: -0.09194747850075592
                                                                               [AHallucinating discovery...:  34%|‚ñà‚ñà‚ñà‚ñç      | 31/91 [15:55:13<39:24:52, 2364.88s/it]
Best pipeline: KNeighborsRegressor(PCA(KNeighborsRegressor(ElasticNetCV(SGDRegressor(Normalizer(RidgeCV(input_matrix), norm=l2), alpha=0.01, eta0=0.1, fit_intercept=False, l1_ratio=0.75, learning_rate=constant, loss=squared_loss, penalty=elasticnet, power_t=1.0), l1_ratio=0.25, tol=0.001), n_neighbors=1, p=2, weights=distance), iterated_power=9, svd_solver=randomized), n_neighbors=5, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:04<00:09,  6.76pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [14:59<4:41:57, 268.54s/pipeline][A
Generation 1 - Current best internal CV score: -0.09149890387254289
Optimization Progress:  78%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä  | 75/96 [15:01<1:05:47, 187.99s/pipeline][A
Optimization Progress:  79%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ  | 76/96 [26:18<1:51:32, 334.61s/pipeline][A
Generation 2 - Current best internal CV score: -0.09080448341016432
                                                                               [AHallucinating discovery...:  35%|‚ñà‚ñà‚ñà‚ñå      | 32/91 [16:48:05<42:43:44, 2607.19s/it]
Best pipeline: KNeighborsRegressor(PCA(KNeighborsRegressor(ElasticNetCV(ZeroCount(Normalizer(input_matrix, norm=l1)), l1_ratio=0.7000000000000001, tol=0.001), n_neighbors=1, p=1, weights=distance), iterated_power=10, svd_solver=randomized), n_neighbors=5, p=1, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:02<00:05, 11.81pipeline/s][A
Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [00:15<04:04,  3.88s/pipeline][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  36%|‚ñà‚ñà‚ñà‚ñã      | 35/96 [13:39<2:05:19, 123.27s/pipeline][A
Generation 1 - Current best internal CV score: -0.09054111533702063
Optimization Progress:  77%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã  | 74/96 [13:49<31:40, 86.36s/pipeline]   [A
Optimization Progress:  78%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä  | 75/96 [23:00<1:19:04, 225.94s/pipeline][A
Generation 2 - Current best internal CV score: -0.09054111533702063
                                                                               [AHallucinating discovery...:  36%|‚ñà‚ñà‚ñà‚ñã      | 33/91 [17:24:46<40:02:30, 2485.35s/it]
Best pipeline: KNeighborsRegressor(PCA(KNeighborsRegressor(ElasticNetCV(SGDRegressor(Normalizer(CombineDFs(RidgeCV(input_matrix), input_matrix), norm=l2), alpha=0.01, eta0=0.1, fit_intercept=False, l1_ratio=0.75, learning_rate=invscaling, loss=squared_loss, penalty=elasticnet, power_t=1.0), l1_ratio=0.25, tol=0.001), n_neighbors=1, p=2, weights=distance), iterated_power=9, svd_solver=randomized), n_neighbors=5, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:08<00:17,  3.56pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [12:56<4:02:05, 230.56s/pipeline][A
Generation 1 - Current best internal CV score: -0.08974172619040288
Optimization Progress:  75%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 72/96 [12:58<1:04:33, 161.41s/pipeline][A
Optimization Progress:  76%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 73/96 [13:09<44:31, 116.13s/pipeline]  [A
Optimization Progress:  77%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã  | 74/96 [22:01<1:28:19, 240.87s/pipeline][A
Generation 2 - Current best internal CV score: -0.08974172619040288
                                                                               [AHallucinating discovery...:  37%|‚ñà‚ñà‚ñà‚ñã      | 34/91 [18:02:59<38:26:16, 2427.66s/it]
Best pipeline: KNeighborsRegressor(ElasticNetCV(PCA(KNeighborsRegressor(ElasticNetCV(SGDRegressor(Normalizer(RidgeCV(input_matrix), norm=l2), alpha=0.01, eta0=0.1, fit_intercept=False, l1_ratio=0.75, learning_rate=constant, loss=squared_loss, penalty=elasticnet, power_t=1.0), l1_ratio=0.25, tol=0.001), n_neighbors=1, p=2, weights=distance), iterated_power=9, svd_solver=randomized), l1_ratio=0.55, tol=0.1), n_neighbors=5, p=1, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:02<00:05, 12.45pipeline/s][A
Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [00:12<03:06,  2.95s/pipeline][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  35%|‚ñà‚ñà‚ñà‚ñå      | 34/96 [11:20<3:29:21, 202.60s/pipeline][A
Generation 1 - Current best internal CV score: -0.08974172619040288
Optimization Progress:  79%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ  | 76/96 [11:21<47:16, 141.82s/pipeline]  [A
Optimization Progress:  80%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  | 77/96 [11:37<44:54, 141.82s/pipeline][A
Optimization Progress:  81%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè | 78/96 [20:48<55:20, 184.45s/pipeline][A
Generation 2 - Current best internal CV score: -0.08974172619040288
                                                                             [AHallucinating discovery...:  38%|‚ñà‚ñà‚ñà‚ñä      | 35/91 [18:43:30<37:46:38, 2428.54s/it]
Best pipeline: KNeighborsRegressor(ElasticNetCV(PCA(KNeighborsRegressor(ElasticNetCV(SGDRegressor(Normalizer(RidgeCV(input_matrix), norm=l2), alpha=0.01, eta0=0.1, fit_intercept=False, l1_ratio=0.75, learning_rate=constant, loss=squared_loss, penalty=elasticnet, power_t=1.0), l1_ratio=0.25, tol=0.001), n_neighbors=1, p=2, weights=distance), iterated_power=9, svd_solver=randomized), l1_ratio=0.55, tol=0.1), n_neighbors=5, p=1, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:08<00:17,  3.65pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [13:58<4:21:35, 249.14s/pipeline][A
Generation 1 - Current best internal CV score: -0.087559393490469
Optimization Progress:  75%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 72/96 [13:59<1:09:45, 174.40s/pipeline][A
Optimization Progress:  75%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 72/96 [14:17<1:09:45, 174.40s/pipeline][A
Optimization Progress:  76%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 73/96 [24:46<2:01:15, 316.35s/pipeline][A
Generation 2 - Current best internal CV score: -0.087559393490469
                                                                               [AHallucinating discovery...:  40%|‚ñà‚ñà‚ñà‚ñâ      | 36/91 [19:21:25<36:23:52, 2382.41s/it]
Best pipeline: KNeighborsRegressor(KNeighborsRegressor(ElasticNetCV(SelectPercentile(Normalizer(input_matrix, norm=l1), percentile=69), l1_ratio=0.25, tol=0.001), n_neighbors=1, p=2, weights=distance), n_neighbors=5, p=1, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:00<00:01, 51.14pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [00:15<00:01, 51.14pipeline/s][A
Optimization Progress:  35%|‚ñà‚ñà‚ñà‚ñå      | 34/96 [11:55<1:50:45, 107.19s/pipeline][A
Generation 1 - Current best internal CV score: -0.087559393490469
Optimization Progress:  72%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè  | 69/96 [12:05<33:48, 75.12s/pipeline]   [A
Optimization Progress:  73%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé  | 70/96 [20:58<1:32:09, 212.69s/pipeline][A
Generation 2 - Current best internal CV score: -0.087559393490469
                                                                               [AHallucinating discovery...:  41%|‚ñà‚ñà‚ñà‚ñà      | 37/91 [19:55:44<34:16:53, 2285.43s/it]
Best pipeline: KNeighborsRegressor(KNeighborsRegressor(ElasticNetCV(SelectPercentile(Normalizer(input_matrix, norm=l1), percentile=69), l1_ratio=0.25, tol=0.001), n_neighbors=1, p=2, weights=distance), n_neighbors=5, p=1, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:10<00:20,  3.13pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [13:51<4:19:05, 246.75s/pipeline][A
Generation 1 - Current best internal CV score: -0.08750151133540277
Optimization Progress:  77%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã  | 74/96 [13:55<1:03:20, 172.75s/pipeline][A
Optimization Progress:  78%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä  | 75/96 [23:56<1:45:24, 301.19s/pipeline][A
Generation 2 - Current best internal CV score: -0.0848068839362128
                                                                               [AHallucinating discovery...:  42%|‚ñà‚ñà‚ñà‚ñà‚ñè     | 38/91 [20:48:38<37:34:19, 2552.06s/it]
Best pipeline: KNeighborsRegressor(PCA(KNeighborsRegressor(Normalizer(input_matrix, norm=l2), n_neighbors=1, p=2, weights=distance), iterated_power=1, svd_solver=randomized), n_neighbors=16, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:06<00:13,  4.60pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  35%|‚ñà‚ñà‚ñà‚ñå      | 34/96 [12:59<1:59:54, 116.04s/pipeline][A
Generation 1 - Current best internal CV score: -0.0848068839362128
Optimization Progress:  75%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 72/96 [13:06<32:30, 81.28s/pipeline]   [A
Optimization Progress:  76%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 73/96 [18:36<59:43, 155.81s/pipeline][A
Generation 2 - Current best internal CV score: -0.0848068839362128
                                                                             [AHallucinating discovery...:  43%|‚ñà‚ñà‚ñà‚ñà‚ñé     | 39/91 [21:52:35<42:25:48, 2937.47s/it]
Best pipeline: KNeighborsRegressor(PCA(KNeighborsRegressor(Normalizer(input_matrix, norm=l2), n_neighbors=1, p=2, weights=distance), iterated_power=1, svd_solver=randomized), n_neighbors=16, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:01<00:02, 23.59pipeline/s][A
Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [00:06<01:44,  1.67s/pipeline][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  35%|‚ñà‚ñà‚ñà‚ñå      | 34/96 [14:59<4:38:05, 269.11s/pipeline][A
Generation 1 - Current best internal CV score: -0.0848068839362128
Optimization Progress:  81%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè | 78/96 [15:05<56:31, 188.42s/pipeline]  [A
Optimization Progress:  82%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè | 79/96 [24:44<1:26:31, 305.40s/pipeline][A
Generation 2 - Current best internal CV score: -0.08443240390492242
                                                                               [AHallucinating discovery...:  44%|‚ñà‚ñà‚ñà‚ñà‚ñç     | 40/91 [22:59:57<46:18:25, 3268.74s/it]
Best pipeline: KNeighborsRegressor(PCA(KNeighborsRegressor(Normalizer(input_matrix, norm=l2), n_neighbors=1, p=2, weights=uniform), iterated_power=1, svd_solver=randomized), n_neighbors=16, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:06<00:12,  5.04pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  35%|‚ñà‚ñà‚ñà‚ñå      | 34/96 [12:52<1:58:52, 115.04s/pipeline][A
Generation 1 - Current best internal CV score: -0.0834943079157556
Optimization Progress:  71%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   | 68/96 [12:52<37:34, 80.53s/pipeline]   [A
Optimization Progress:  72%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè  | 69/96 [13:07<36:14, 80.53s/pipeline][A
Optimization Progress:  73%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé  | 70/96 [23:32<1:06:00, 152.34s/pipeline][A
Generation 2 - Current best internal CV score: -0.08326512862153113
                                                                               [AHallucinating discovery...:  45%|‚ñà‚ñà‚ñà‚ñà‚ñå     | 41/91 [23:57:15<46:06:28, 3319.77s/it]
Best pipeline: KNeighborsRegressor(XGBRegressor(PCA(KNeighborsRegressor(Normalizer(input_matrix, norm=l2), n_neighbors=1, p=2, weights=uniform), iterated_power=1, svd_solver=randomized), learning_rate=0.001, max_depth=3, min_child_weight=14, n_estimators=100, nthread=1, objective=reg:squarederror, subsample=0.3), n_neighbors=16, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:00<00:00, 69.96pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [00:12<00:00, 69.96pipeline/s][A
Optimization Progress:  35%|‚ñà‚ñà‚ñà‚ñå      | 34/96 [13:23<2:04:24, 120.40s/pipeline][A
Generation 1 - Current best internal CV score: -0.0826574889339563
Optimization Progress:  81%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè | 78/96 [13:23<25:17, 84.28s/pipeline]   [A
Optimization Progress:  83%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé | 80/96 [13:42<22:28, 84.28s/pipeline][A
Optimization Progress:  84%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç | 81/96 [22:17<28:05, 112.34s/pipeline][A
Generation 2 - Current best internal CV score: -0.0826574889339563
                                                                             [AHallucinating discovery...:  46%|‚ñà‚ñà‚ñà‚ñà‚ñå     | 42/91 [24:58:30<46:38:07, 3426.28s/it]
Best pipeline: KNeighborsRegressor(PCA(ExtraTreesRegressor(KNeighborsRegressor(Normalizer(input_matrix, norm=l2), n_neighbors=1, p=2, weights=distance), bootstrap=True, max_features=0.55, min_samples_leaf=20, min_samples_split=16, n_estimators=100), iterated_power=1, svd_solver=randomized), n_neighbors=16, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:00<00:00, 171.81pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [00:15<00:00, 171.81pipeline/s][A
Optimization Progress:  35%|‚ñà‚ñà‚ñà‚ñå      | 34/96 [12:48<1:59:03, 115.22s/pipeline][A
Generation 1 - Current best internal CV score: -0.08169730104644564
Optimization Progress:  74%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç  | 71/96 [12:52<33:37, 80.69s/pipeline]   [A
Optimization Progress:  75%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 72/96 [22:21<1:30:48, 227.01s/pipeline][A
Generation 2 - Current best internal CV score: -0.08164092802088903
                                                                               [AHallucinating discovery...:  47%|‚ñà‚ñà‚ñà‚ñà‚ñã     | 43/91 [25:56:42<45:56:50, 3446.04s/it]
Best pipeline: KNeighborsRegressor(KNeighborsRegressor(LassoLarsCV(PCA(OneHotEncoder(Normalizer(input_matrix, norm=l2), minimum_fraction=0.05, sparse=False, threshold=10), iterated_power=8, svd_solver=randomized), normalize=False), n_neighbors=1, p=2, weights=distance), n_neighbors=8, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:03<00:07,  9.09pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [13:08<4:07:13, 235.45s/pipeline][A
Generation 1 - Current best internal CV score: -0.08155659521977054
Optimization Progress:  77%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã  | 74/96 [13:12<1:00:26, 164.85s/pipeline][A
Optimization Progress:  78%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä  | 75/96 [13:17<40:55, 116.92s/pipeline]  [A
Optimization Progress:  79%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ  | 76/96 [22:24<1:21:57, 245.89s/pipeline][A
Generation 2 - Current best internal CV score: -0.08155659521977054
                                                                               [AHallucinating discovery...:  48%|‚ñà‚ñà‚ñà‚ñà‚ñä     | 44/91 [26:51:06<44:16:35, 3391.40s/it]
Best pipeline: KNeighborsRegressor(KNeighborsRegressor(Normalizer(CombineDFs(input_matrix, input_matrix), norm=l2), n_neighbors=1, p=1, weights=uniform), n_neighbors=14, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:00<00:00, 125.34pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:15<00:00, 125.34pipeline/s][A
Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [12:53<4:03:35, 232.00s/pipeline][A
Generation 1 - Current best internal CV score: -0.08155659521977054
Optimization Progress:  79%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ  | 76/96 [12:59<54:08, 162.44s/pipeline]  [A
Optimization Progress:  80%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  | 77/96 [25:37<1:47:59, 341.03s/pipeline][A
Generation 2 - Current best internal CV score: -0.08155659521977054
                                                                               [AHallucinating discovery...:  49%|‚ñà‚ñà‚ñà‚ñà‚ñâ     | 45/91 [27:35:27<40:32:01, 3172.20s/it]
Best pipeline: KNeighborsRegressor(KNeighborsRegressor(Normalizer(CombineDFs(input_matrix, input_matrix), norm=l2), n_neighbors=1, p=1, weights=uniform), n_neighbors=14, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:02<00:05, 10.88pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [11:41<3:40:03, 209.58s/pipeline][A
Generation 1 - Current best internal CV score: -0.08155659521977054
Optimization Progress:  75%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 72/96 [11:43<58:41, 146.72s/pipeline]  [A
Optimization Progress:  76%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 73/96 [21:31<1:46:59, 279.12s/pipeline][A
Generation 2 - Current best internal CV score: -0.08155659521977054
                                                                               [AHallucinating discovery...:  51%|‚ñà‚ñà‚ñà‚ñà‚ñà     | 46/91 [28:25:06<38:55:35, 3114.12s/it]
Best pipeline: KNeighborsRegressor(KNeighborsRegressor(Normalizer(CombineDFs(input_matrix, input_matrix), norm=l2), n_neighbors=1, p=1, weights=uniform), n_neighbors=14, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:02<00:05, 12.22pipeline/s][A
Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [00:07<01:37,  1.55s/pipeline][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  35%|‚ñà‚ñà‚ñà‚ñå      | 34/96 [13:15<4:05:21, 237.44s/pipeline][A
Generation 1 - Current best internal CV score: -0.08116317320512709
Optimization Progress:  80%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  | 77/96 [13:16<52:38, 166.22s/pipeline]  [A
Optimization Progress:  81%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè | 78/96 [22:35<1:25:11, 283.96s/pipeline][A
Generation 2 - Current best internal CV score: -0.08116317320512709
                                                                               [AHallucinating discovery...:  52%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè    | 47/91 [29:19:09<38:32:07, 3152.89s/it]
Best pipeline: KNeighborsRegressor(VarianceThreshold(KNeighborsRegressor(Normalizer(CombineDFs(input_matrix, input_matrix), norm=l2), n_neighbors=1, p=1, weights=uniform), threshold=0.0005), n_neighbors=15, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:03<00:06,  9.97pipeline/s][A
Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [00:04<00:21,  2.93pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  35%|‚ñà‚ñà‚ñà‚ñå      | 34/96 [11:59<3:41:57, 214.80s/pipeline][A
Generation 1 - Current best internal CV score: -0.08116317320512709
Optimization Progress:  79%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ  | 76/96 [12:02<50:07, 150.38s/pipeline]  [A
Optimization Progress:  80%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  | 77/96 [20:02<1:18:55, 249.26s/pipeline][A
Generation 2 - Current best internal CV score: -0.08116317320512709
                                                                               [AHallucinating discovery...:  53%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé    | 48/91 [30:16:17<38:38:40, 3235.35s/it]
Best pipeline: KNeighborsRegressor(VarianceThreshold(KNeighborsRegressor(Normalizer(CombineDFs(input_matrix, input_matrix), norm=l2), n_neighbors=1, p=1, weights=uniform), threshold=0.0005), n_neighbors=15, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:04<00:08,  7.40pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [11:38<3:38:46, 208.36s/pipeline][A
Generation 1 - Current best internal CV score: -0.08007171264570068
Optimization Progress:  78%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä  | 75/96 [11:46<51:03, 145.90s/pipeline]  [A
Optimization Progress:  80%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  | 77/96 [19:54<55:31, 175.36s/pipeline][A
Generation 2 - Current best internal CV score: -0.08007171264570068
                                                                             [AHallucinating discovery...:  54%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç    | 49/91 [30:54:15<34:23:43, 2948.19s/it]
Best pipeline: KNeighborsRegressor(KNeighborsRegressor(LassoLarsCV(PCA(OneHotEncoder(Normalizer(input_matrix, norm=l2), minimum_fraction=0.05, sparse=False, threshold=10), iterated_power=8, svd_solver=randomized), normalize=False), n_neighbors=1, p=1, weights=distance), n_neighbors=8, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:01<00:03, 18.46pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [13:33<4:15:50, 243.66s/pipeline][A
Generation 1 - Current best internal CV score: -0.08007171264570068
Optimization Progress:  78%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä  | 75/96 [13:35<59:41, 170.57s/pipeline]  [A
Optimization Progress:  80%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  | 77/96 [13:45<38:17, 120.90s/pipeline][A
Optimization Progress:  81%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè | 78/96 [24:37<1:24:07, 280.43s/pipeline][A
Generation 2 - Current best internal CV score: -0.08007171264570068
                                                                               [AHallucinating discovery...:  55%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç    | 50/91 [32:06:50<38:23:01, 3370.28s/it]
Best pipeline: KNeighborsRegressor(KNeighborsRegressor(LassoLarsCV(PCA(OneHotEncoder(Normalizer(input_matrix, norm=l2), minimum_fraction=0.05, sparse=False, threshold=10), iterated_power=8, svd_solver=randomized), normalize=False), n_neighbors=1, p=1, weights=distance), n_neighbors=8, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:05<00:11,  5.73pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [13:06<4:06:04, 234.36s/pipeline][A
Generation 1 - Current best internal CV score: -0.08007171264570068
Optimization Progress:  80%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  | 77/96 [13:14<51:58, 164.11s/pipeline]  [A
Optimization Progress:  81%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè | 78/96 [22:46<1:25:55, 286.44s/pipeline][A
Generation 2 - Current best internal CV score: -0.08007171264570068
                                                                               [AHallucinating discovery...:  56%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå    | 51/91 [33:25:43<41:59:21, 3779.03s/it]
Best pipeline: KNeighborsRegressor(KNeighborsRegressor(LassoLarsCV(PCA(OneHotEncoder(Normalizer(input_matrix, norm=l2), minimum_fraction=0.05, sparse=False, threshold=10), iterated_power=8, svd_solver=randomized), normalize=False), n_neighbors=1, p=1, weights=distance), n_neighbors=8, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:07<00:15,  4.18pipeline/s][A
Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [00:08<00:20,  3.02pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
--- Logging error ---
Traceback (most recent call last):
  File "/opt/conda/lib/python3.7/logging/handlers.py", line 940, in emit
    self.socket.sendto(msg, self.address)
OSError: [Errno 101] Network is unreachable
Call stack:
  File "/opt/mods/lib/python3.6/site-packages/nersc_customs/core.py", line 92, in exit_hook
    reporter(inspector(sys.modules))
  File "/opt/mods/lib/python3.6/site-packages/nersc_sitecustomize/nersc_sitecustomize.py", line 107, in __call__
    nerscjson.log(self.routing_key, json.dumps(doc), self.verbose, self.test)
  File "/opt/mods/lib/python3.6/site-packages/nerscjson/__init__.py", line 155, in log
    logger.info(json_msg)
Message: '{"category": "mods-test", "event_timestamp": "2020-09-07T06:23:31.141734-04:00", "executable": "/opt/conda/bin/python", "is_compute": true, "is_staff": false, "job_id": "34089058", "main": "/global/cfs/cdirs/m2755/ktran/catalyst-acquisitions/notebooks/gaussian/TPOT/hallucinate.py", "num_nodes": 1, "qos": "regular_knl", "repo": "m2755", "service": "python", "subservice": "joblib", "subsystem": "KNL", "system": "cori", "username": "ktran", "version": "0.16.0"}'
Arguments: ()
--- Logging error ---
Traceback (most recent call last):
  File "/opt/conda/lib/python3.7/logging/handlers.py", line 940, in emit
    self.socket.sendto(msg, self.address)
OSError: [Errno 101] Network is unreachable
Call stack:
  File "/opt/mods/lib/python3.6/site-packages/nersc_customs/core.py", line 92, in exit_hook
    reporter(inspector(sys.modules))
  File "/opt/mods/lib/python3.6/site-packages/nersc_sitecustomize/nersc_sitecustomize.py", line 107, in __call__
    nerscjson.log(self.routing_key, json.dumps(doc), self.verbose, self.test)
  File "/opt/mods/lib/python3.6/site-packages/nerscjson/__init__.py", line 155, in log
    logger.info(json_msg)
Message: '{"category": "mods-test", "event_timestamp": "2020-09-07T06:23:31.141734-04:00", "executable": "/opt/conda/bin/python", "is_compute": true, "is_staff": false, "job_id": "34089058", "main": "/global/cfs/cdirs/m2755/ktran/catalyst-acquisitions/notebooks/gaussian/TPOT/hallucinate.py", "num_nodes": 1, "qos": "regular_knl", "repo": "m2755", "service": "python", "subservice": "multiprocessing", "subsystem": "KNL", "system": "cori", "username": "ktran", "version": ""}'
Arguments: ()
--- Logging error ---
Traceback (most recent call last):
  File "/opt/conda/lib/python3.7/logging/handlers.py", line 940, in emit
    self.socket.sendto(msg, self.address)
OSError: [Errno 101] Network is unreachable
Call stack:
  File "/opt/mods/lib/python3.6/site-packages/nersc_customs/core.py", line 92, in exit_hook
    reporter(inspector(sys.modules))
  File "/opt/mods/lib/python3.6/site-packages/nersc_sitecustomize/nersc_sitecustomize.py", line 107, in __call__
    nerscjson.log(self.routing_key, json.dumps(doc), self.verbose, self.test)
  File "/opt/mods/lib/python3.6/site-packages/nerscjson/__init__.py", line 155, in log
    logger.info(json_msg)
Message: '{"category": "mods-test", "event_timestamp": "2020-09-07T06:23:31.141734-04:00", "executable": "/opt/conda/bin/python", "is_compute": true, "is_staff": false, "job_id": "34089058", "main": "/global/cfs/cdirs/m2755/ktran/catalyst-acquisitions/notebooks/gaussian/TPOT/hallucinate.py", "num_nodes": 1, "qos": "regular_knl", "repo": "m2755", "service": "python", "subservice": "numpy", "subsystem": "KNL", "system": "cori", "username": "ktran", "version": "1.19.1"}'
Arguments: ()

Optimization Progress:  35%|‚ñà‚ñà‚ñà‚ñå      | 34/96 [12:58<3:59:10, 231.47s/pipeline][A
Generation 1 - Current best internal CV score: -0.08007171264570068
Optimization Progress:  78%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä  | 75/96 [13:10<56:44, 162.11s/pipeline]  [A
Optimization Progress:  79%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ  | 76/96 [20:32<1:22:03, 246.17s/pipeline][A
Generation 2 - Current best internal CV score: -0.08007171264570068
                                                                               [AHallucinating discovery...:  57%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã    | 52/91 [34:29:45<41:08:37, 3797.89s/it]
Best pipeline: KNeighborsRegressor(KNeighborsRegressor(LassoLarsCV(PCA(OneHotEncoder(Normalizer(input_matrix, norm=l2), minimum_fraction=0.05, sparse=False, threshold=10), iterated_power=8, svd_solver=randomized), normalize=False), n_neighbors=1, p=1, weights=distance), n_neighbors=8, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:05<00:10,  6.03pipeline/s][A
Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [00:11<02:13,  2.11s/pipeline][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  35%|‚ñà‚ñà‚ñà‚ñå      | 34/96 [14:27<4:26:50, 258.24s/pipeline][A
Generation 1 - Current best internal CV score: -0.07979041742875295
Optimization Progress:  81%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè | 78/96 [14:31<54:14, 180.79s/pipeline]  [A
Optimization Progress:  82%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè | 79/96 [14:38<36:27, 128.66s/pipeline][A
Optimization Progress:  83%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé | 80/96 [28:50<1:32:09, 345.58s/pipeline][A
Generation 2 - Current best internal CV score: -0.07945979418580783
                                                                               [AHallucinating discovery...:  58%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä    | 53/91 [35:45:28<42:27:01, 4021.63s/it]
Best pipeline: KNeighborsRegressor(OneHotEncoder(KNeighborsRegressor(LassoLarsCV(PCA(OneHotEncoder(SelectPercentile(LinearSVR(Normalizer(input_matrix, norm=l2), C=1.0, dual=False, epsilon=1.0, loss=squared_epsilon_insensitive, tol=1e-05), percentile=63), minimum_fraction=0.05, sparse=False, threshold=10), iterated_power=8, svd_solver=randomized), normalize=False), n_neighbors=1, p=1, weights=distance), minimum_fraction=0.05, sparse=False, threshold=10), n_neighbors=8, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:01<00:02, 24.47pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [13:37<4:17:14, 244.99s/pipeline][A
Generation 1 - Current best internal CV score: -0.07877589026308926
Optimization Progress:  81%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè | 78/96 [13:39<51:27, 171.50s/pipeline]  [A
Optimization Progress:  83%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé | 80/96 [13:47<32:20, 121.25s/pipeline][A
Optimization Progress:  84%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç | 81/96 [23:33<1:05:11, 260.74s/pipeline][A
Generation 2 - Current best internal CV score: -0.07815771429530813
                                                                               [AHallucinating discovery...:  59%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ    | 54/91 [36:48:45<40:38:20, 3954.06s/it]
Best pipeline: KNeighborsRegressor(KNeighborsRegressor(SelectFwe(GradientBoostingRegressor(LassoLarsCV(Normalizer(input_matrix, norm=l2), normalize=False), alpha=0.85, learning_rate=0.01, loss=ls, max_depth=9, max_features=0.3, min_samples_leaf=6, min_samples_split=7, n_estimators=100, subsample=0.1), alpha=0.01), n_neighbors=1, p=1, weights=distance), n_neighbors=8, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:14<00:28,  2.26pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [14:47<4:35:30, 262.39s/pipeline][A
Generation 1 - Current best internal CV score: -0.07815771429530813
Optimization Progress:  80%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  | 77/96 [14:53<58:10, 183.71s/pipeline]  [A
Optimization Progress:  81%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè | 78/96 [14:57<38:53, 129.62s/pipeline][A
Optimization Progress:  82%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè | 79/96 [24:20<1:13:35, 259.76s/pipeline][A
Generation 2 - Current best internal CV score: -0.07815771429530813
                                                                               [AHallucinating discovery...:  60%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    | 55/91 [37:47:02<38:10:07, 3816.88s/it]
Best pipeline: KNeighborsRegressor(KNeighborsRegressor(SelectFwe(GradientBoostingRegressor(LassoLarsCV(Normalizer(input_matrix, norm=l2), normalize=False), alpha=0.85, learning_rate=0.01, loss=ls, max_depth=9, max_features=0.3, min_samples_leaf=6, min_samples_split=7, n_estimators=100, subsample=0.1), alpha=0.01), n_neighbors=1, p=1, weights=distance), n_neighbors=8, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:06<00:12,  5.01pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [15:22<4:48:38, 274.89s/pipeline][A
Generation 1 - Current best internal CV score: -0.07815771429530813
Optimization Progress:  88%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä | 84/96 [15:32<38:29, 192.48s/pipeline]  [A
Optimization Progress:  89%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä | 85/96 [28:18<1:06:51, 364.73s/pipeline][A
Generation 2 - Current best internal CV score: -0.07815771429530813
                                                                               [AHallucinating discovery...:  62%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè   | 56/91 [38:45:37<36:13:48, 3726.54s/it]
Best pipeline: KNeighborsRegressor(KNeighborsRegressor(SelectFwe(GradientBoostingRegressor(LassoLarsCV(Normalizer(input_matrix, norm=l2), normalize=False), alpha=0.85, learning_rate=0.01, loss=ls, max_depth=9, max_features=0.3, min_samples_leaf=6, min_samples_split=7, n_estimators=100, subsample=0.1), alpha=0.01), n_neighbors=1, p=1, weights=distance), n_neighbors=8, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:02<00:05, 11.14pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [12:09<3:48:57, 218.06s/pipeline][A
Generation 1 - Current best internal CV score: -0.07815771429530813
Optimization Progress:  77%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã  | 74/96 [12:23<56:00, 152.74s/pipeline]  [A
Optimization Progress:  78%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä  | 75/96 [23:11<1:45:28, 301.37s/pipeline][A
Generation 2 - Current best internal CV score: -0.07815771429530813
                                                                               [AHallucinating discovery...:  63%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé   | 57/91 [39:23:23<31:03:20, 3288.26s/it]
Best pipeline: KNeighborsRegressor(KNeighborsRegressor(SelectFwe(GradientBoostingRegressor(LassoLarsCV(Normalizer(input_matrix, norm=l2), normalize=False), alpha=0.85, learning_rate=0.01, loss=ls, max_depth=9, max_features=0.3, min_samples_leaf=6, min_samples_split=7, n_estimators=100, subsample=0.1), alpha=0.01), n_neighbors=1, p=1, weights=distance), n_neighbors=8, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:03<00:06,  9.60pipeline/s][A
Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [00:09<01:55,  1.83s/pipeline][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  35%|‚ñà‚ñà‚ñà‚ñå      | 34/96 [13:16<4:05:22, 237.45s/pipeline][A
Generation 1 - Current best internal CV score: -0.07800388815305218
Optimization Progress:  76%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 73/96 [13:16<1:03:43, 166.22s/pipeline][A
Optimization Progress:  76%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 73/96 [13:29<1:03:43, 166.22s/pipeline][A
Optimization Progress:  77%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã  | 74/96 [13:39<45:06, 123.01s/pipeline]  [A
Optimization Progress:  78%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä  | 75/96 [25:52<1:47:06, 306.02s/pipeline][A
Generation 2 - Current best internal CV score: -0.07768086967298024
                                                                               [AHallucinating discovery...:  64%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé   | 58/91 [40:02:38<27:34:33, 3008.29s/it]
Best pipeline: KNeighborsRegressor(KNeighborsRegressor(LinearSVR(SelectFwe(GradientBoostingRegressor(LassoLarsCV(Normalizer(input_matrix, norm=l2), normalize=False), alpha=0.85, learning_rate=0.01, loss=ls, max_depth=9, max_features=0.3, min_samples_leaf=6, min_samples_split=7, n_estimators=100, subsample=0.1), alpha=0.01), C=5.0, dual=False, epsilon=1.0, loss=squared_epsilon_insensitive, tol=0.0001), n_neighbors=1, p=1, weights=distance), n_neighbors=8, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:01<00:03, 16.64pipeline/s][A
Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [00:11<03:05,  2.94s/pipeline][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  35%|‚ñà‚ñà‚ñà‚ñå      | 34/96 [13:32<4:10:21, 242.28s/pipeline][A
Generation 1 - Current best internal CV score: -0.07768086967298024
Optimization Progress:  84%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç | 81/96 [13:32<42:24, 169.60s/pipeline]  [A
Optimization Progress:  84%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç | 81/96 [13:52<42:24, 169.60s/pipeline][A
Optimization Progress:  85%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå | 82/96 [23:48<1:10:46, 303.30s/pipeline][A
Generation 2 - Current best internal CV score: -0.07768086967298024
                                                                               [AHallucinating discovery...:  65%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç   | 59/91 [41:36:18<33:42:18, 3791.83s/it]
Best pipeline: KNeighborsRegressor(KNeighborsRegressor(LinearSVR(SelectFwe(GradientBoostingRegressor(LassoLarsCV(Normalizer(input_matrix, norm=l2), normalize=False), alpha=0.85, learning_rate=0.01, loss=ls, max_depth=9, max_features=0.3, min_samples_leaf=6, min_samples_split=7, n_estimators=100, subsample=0.1), alpha=0.01), C=5.0, dual=False, epsilon=1.0, loss=squared_epsilon_insensitive, tol=0.0001), n_neighbors=1, p=1, weights=distance), n_neighbors=8, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:00<00:01, 37.02pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:12<00:01, 37.02pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [16:53<5:19:02, 303.85s/pipeline][A
Generation 1 - Current best internal CV score: -0.07768086967298024
Optimization Progress:  89%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä | 85/96 [17:06<39:00, 212.76s/pipeline]  [A
Optimization Progress:  90%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ | 86/96 [17:06<24:50, 149.01s/pipeline][A
Optimization Progress:  91%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà | 87/96 [29:28<49:03, 327.02s/pipeline][A
Generation 2 - Current best internal CV score: -0.07768086967298024
                                                                             [AHallucinating discovery...:  66%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå   | 60/91 [43:09:00<37:13:25, 4322.77s/it]
Best pipeline: KNeighborsRegressor(KNeighborsRegressor(LinearSVR(SelectFwe(GradientBoostingRegressor(LassoLarsCV(Normalizer(input_matrix, norm=l2), normalize=False), alpha=0.85, learning_rate=0.01, loss=ls, max_depth=9, max_features=0.3, min_samples_leaf=6, min_samples_split=7, n_estimators=100, subsample=0.1), alpha=0.01), C=5.0, dual=False, epsilon=1.0, loss=squared_epsilon_insensitive, tol=0.0001), n_neighbors=1, p=1, weights=distance), n_neighbors=8, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:00<00:00, 108.82pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:10<00:00, 108.82pipeline/s][A
Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [00:19<06:01,  5.74s/pipeline] [A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  35%|‚ñà‚ñà‚ñà‚ñå      | 34/96 [18:20<5:39:11, 328.25s/pipeline][A
Generation 1 - Current best internal CV score: -0.07768086967298024
Optimization Progress:  86%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã | 83/96 [18:24<49:47, 229.80s/pipeline]  [A
Optimization Progress:  88%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä | 84/96 [31:34<1:19:33, 397.77s/pipeline][A
Generation 2 - Current best internal CV score: -0.07768086967298024
                                                                               [AHallucinating discovery...:  67%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã   | 61/91 [44:00:33<32:56:55, 3953.84s/it]
Best pipeline: KNeighborsRegressor(KNeighborsRegressor(LinearSVR(SelectFwe(GradientBoostingRegressor(LassoLarsCV(Normalizer(input_matrix, norm=l2), normalize=False), alpha=0.85, learning_rate=0.01, loss=ls, max_depth=9, max_features=0.3, min_samples_leaf=6, min_samples_split=7, n_estimators=100, subsample=0.1), alpha=0.01), C=5.0, dual=False, epsilon=1.0, loss=squared_epsilon_insensitive, tol=0.0001), n_neighbors=1, p=1, weights=distance), n_neighbors=8, p=2, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:09<00:19,  3.27pipeline/s][A
Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [00:18<03:06,  2.97s/pipeline][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  35%|‚ñà‚ñà‚ñà‚ñå      | 34/96 [15:06<4:37:17, 268.34s/pipeline][A
Generation 1 - Current best internal CV score: -0.0771224058763329
Optimization Progress:  78%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä  | 75/96 [15:08<1:05:44, 187.85s/pipeline][A
Optimization Progress:  79%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ  | 76/96 [15:21<45:10, 135.52s/pipeline]  [A
Optimization Progress:  80%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  | 77/96 [24:51<1:24:07, 265.68s/pipeline][A
Generation 2 - Current best internal CV score: -0.07661104513777153
                                                                               [AHallucinating discovery...:  68%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä   | 62/91 [46:00:27<39:40:53, 4925.99s/it]
Best pipeline: KNeighborsRegressor(KNeighborsRegressor(LassoLarsCV(PCA(Normalizer(input_matrix, norm=l2), iterated_power=7, svd_solver=randomized), normalize=False), n_neighbors=1, p=1, weights=uniform), n_neighbors=8, p=1, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:09<00:19,  3.25pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [14:51<4:38:05, 264.84s/pipeline][A
Generation 1 - Current best internal CV score: -0.07597729876631572
Optimization Progress:  77%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã  | 74/96 [15:08<1:08:01, 185.51s/pipeline][A
Optimization Progress:  78%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä  | 75/96 [26:49<1:59:03, 340.17s/pipeline][A
Generation 2 - Current best internal CV score: -0.07596396149340869
                                                                               [AHallucinating discovery...:  69%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ   | 63/91 [46:44:45<33:01:17, 4245.64s/it]
Best pipeline: KNeighborsRegressor(KNeighborsRegressor(Normalizer(input_matrix, norm=l1), n_neighbors=1, p=1, weights=uniform), n_neighbors=16, p=1, weights=distance)

Optimization Progress:   0%|          | 0/96 [00:00<?, ?pipeline/s][A
Optimization Progress:  33%|‚ñà‚ñà‚ñà‚ñé      | 32/96 [00:02<00:05, 12.30pipeline/s][A<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray

Optimization Progress:  34%|‚ñà‚ñà‚ñà‚ñç      | 33/96 [14:40<4:36:36, 263.44s/pipeline][A
Generation 1 - Current best internal CV score: -0.07596396149340869
Optimization Progress:  81%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè | 78/96 [14:53<55:20, 184.50s/pipeline]  [A